# import InquiryAnswer, InquiryAnswerButtons, InquiryAnswerStatus from '../fragments/inquiry-answer.graphql'

mutation CompleteInquiryWorkItem(
  $workItem: ID!
  $statusQuestion: ID!
  $buttonTasks: [String]!
  $checkTask: String!
  $inquiryTask: ID!
  $createTask: String!
  $currentGroup: String!
  $answerInfoQuestions: [ID]!
  $willCompleteInquiry: Boolean = false
) {
  completeWorkItem(input: { id: $workItem }) {
    workItem {
      id
      status
      case {
        id
        status
        document {
          id
          ...InquiryAnswer
        }
        ...InquiryAnswerButtons
        # If the work item that will be completed also completes the inquiry
        # itself, we need to fetch certain work items that were completed /
        # canceled in the side effect layer and the inquiry itself
        parentWorkItem @include(if: $willCompleteInquiry) {
          id
          status
          isRedoable
          closedByUser
          closedAt
          case {
            id
            controls: workItems(
              filter: [
                { tasks: [$checkTask, $createTask] }
                { addressedGroups: [$currentGroup] }
              ]
            ) {
              edges {
                node {
                  id
                  status
                }
              }
            }
            inquiries: workItems(
              filter: [
                { task: $inquiryTask }
                { controllingGroups: [$currentGroup] }
              ]
            ) {
              edges {
                node {
                  id
                  isRedoable
                }
              }
            }
          }
        }
      }
    }
  }
}
