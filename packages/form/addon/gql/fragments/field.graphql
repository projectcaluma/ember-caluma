# We can not symlink this file so an exact copy exists in another package:
# packages/form-builder/addon/gql/fragments/field.graphql
#
# When changing this file the other must also receive the same changes.

fragment SimpleQuestion on Question {
  id
  slug
  label
  isRequired
  isHidden
  meta
  infoText
  ... on TextQuestion {
    textMinLength: minLength
    textMaxLength: maxLength
    textDefaultAnswer: defaultAnswer {
      id
      value
    }
    placeholder
    formatValidators {
      edges {
        node {
          slug
          regex
          errorMsg
        }
      }
    }
  }
  ... on TextareaQuestion {
    textareaMinLength: minLength
    textareaMaxLength: maxLength
    textareaDefaultAnswer: defaultAnswer {
      id
      value
    }
    placeholder
    formatValidators {
      edges {
        node {
          slug
          regex
          errorMsg
        }
      }
    }
  }
  ... on IntegerQuestion {
    integerMinValue: minValue
    integerMaxValue: maxValue
    integerDefaultAnswer: defaultAnswer {
      id
      value
    }
    placeholder
  }
  ... on FloatQuestion {
    floatMinValue: minValue
    floatMaxValue: maxValue
    floatDefaultAnswer: defaultAnswer {
      id
      value
    }
    placeholder
  }
  ... on ChoiceQuestion {
    choiceOptions: options {
      edges {
        node {
          id
          slug
          label
          isArchived
        }
      }
    }
    choiceDefaultAnswer: defaultAnswer {
      id
      value
    }
  }
  ... on MultipleChoiceQuestion {
    multipleChoiceOptions: options {
      edges {
        node {
          id
          slug
          label
          isArchived
        }
      }
    }
    multipleChoiceDefaultAnswer: defaultAnswer {
      id
      value
    }
  }
  ... on DateQuestion {
    dateDefaultAnswer: defaultAnswer {
      id
      value
    }
  }
  ... on StaticQuestion {
    staticContent
  }
  ... on CalculatedFloatQuestion {
    calcExpression
  }
  ... on ActionButtonQuestion {
    action
    color
    validateOnEnter
  }
}

fragment FieldTableQuestion on Question {
  id
  ... on TableQuestion {
    rowForm {
      id
      slug
      questions {
        edges {
          node {
            ...SimpleQuestion
          }
        }
      }
    }
    tableDefaultAnswer: defaultAnswer {
      id
      value {
        id
        answers {
          edges {
            node {
              id
              question {
                id
                slug
              }
              ... on StringAnswer {
                stringValue: value
              }
              ... on IntegerAnswer {
                integerValue: value
              }
              ... on FloatAnswer {
                floatValue: value
              }
              ... on ListAnswer {
                listValue: value
              }
              ... on DateAnswer {
                dateValue: value
              }
            }
          }
        }
      }
    }
  }
}

fragment FieldQuestion on Question {
  id
  ...SimpleQuestion
  ...FieldTableQuestion
  ... on FormQuestion {
    subForm {
      id
      slug
      name
      questions {
        edges {
          node {
            # This part here limits our query to 2 level deep nested forms. This
            # has to be solved in another way!
            id
            ...SimpleQuestion
            ...FieldTableQuestion
            ... on FormQuestion {
              subForm {
                id
                slug
                name
                questions {
                  edges {
                    node {
                      ...SimpleQuestion
                      ...FieldTableQuestion
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

fragment SimpleAnswer on Answer {
  id
  question {
    id
    slug
  }
  ... on StringAnswer {
    stringValue: value
  }
  ... on IntegerAnswer {
    integerValue: value
  }
  ... on FloatAnswer {
    floatValue: value
  }
  ... on ListAnswer {
    listValue: value
  }
  ... on FileAnswer {
    fileValue: value {
      id
      uploadUrl
      downloadUrl
      metadata
      name
    }
  }
  ... on DateAnswer {
    dateValue: value
  }
}

fragment FieldAnswer on Answer {
  id
  ...SimpleAnswer
  ... on TableAnswer {
    tableValue: value {
      id
      form {
        id
        slug
        questions {
          edges {
            node {
              ...FieldQuestion
            }
          }
        }
      }
      answers {
        edges {
          node {
            ...SimpleAnswer
          }
        }
      }
    }
  }
}
